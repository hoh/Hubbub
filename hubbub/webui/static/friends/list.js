// Generated by CoffeeScript 1.7.1
(function() {
  var Friend, FriendsList, a, b, br, button, div, form, h1, h2, h3, h4, input, label, span, _ref, _ref1, _ref2, _ref3, _ref4;

  _ref = React.DOM, div = _ref.div, span = _ref.span;

  _ref1 = React.DOM, h1 = _ref1.h1, h2 = _ref1.h2, h3 = _ref1.h3, h4 = _ref1.h4;

  _ref2 = React.DOM, a = _ref2.a, button = _ref2.button;

  _ref3 = React.DOM, b = _ref3.b, br = _ref3.br;

  _ref4 = React.DOM, form = _ref4.form, label = _ref4.label, input = _ref4.input;

  Friend = React.createClass({
    getInitialState: function() {
      return {
        alias: this.props.alias,
        active: this.props.active
      };
    },
    render: function() {
      return div({}, div({
        className: 'friendslist_name inline',
        title: this.props.id
      }, this.state.alias), div({
        className: 'friendslist_status inline'
      }, this.state.active === true ? "Active" : "Inactive"), div({
        className: 'friendslist_switch inline'
      }, this.state.active === true ? button({
        className: 'btn-red',
        onClick: this.stopDummies
      }, "Stop") : button({
        className: 'btn-green',
        onClick: this.startDummies
      }, "Start")));
    },
    startDummies: function() {
      return $.ajax({
        url: "/friends/" + this.props.id,
        dataType: 'json',
        type: 'POST',
        data: {
          active: this.state.active
        },
        success: (function(data) {
          return this.setState({
            active: data.active
          });
        }).bind(this),
        error: (function(xhr, status, err) {
          return console.error(this.props.url, status, err.toString());
        }).bind(this)
      });
    },
    stopDummies: function() {
      return $.ajax({
        url: "/friends/" + this.props.id,
        dataType: 'json',
        type: 'POST',
        data: {
          active: this.state.active
        },
        success: (function(data) {
          return this.setState({
            active: data.active
          });
        }).bind(this),
        error: (function(xhr, status, err) {
          return console.error(this.props.url, status, err.toString());
        }).bind(this)
      });
    }
  });

  FriendsList = React.createClass({
    getInitialState: function() {
      return {
        mode: 'view',
        name: this.props.name,
        original_name: this.props.name,
        friends: []
      };
    },
    componentWillMount: function() {
      return $.ajax({
        url: "/friends/list",
        dataType: 'json',
        type: 'GET',
        success: (function(data) {
          return this.setState({
            friends: data
          });
        }).bind(this),
        error: (function(xhr, status, err) {
          return console.error(this.props.url, status, err.toString());
        }).bind(this)
      });
    },
    render: function() {
      var f;
      return div({}, (function() {
        var _i, _len, _ref5, _results;
        _ref5 = this.state.friends;
        _results = [];
        for (_i = 0, _len = _ref5.length; _i < _len; _i++) {
          f = _ref5[_i];
          _results.push(Friend(f));
        }
        return _results;
      }).call(this));
    }
  });

  React.initializeTouchEvents(true);

  React.renderComponent(FriendsList({
    foo: 42
  }), document.getElementById('friendslist'));

}).call(this);
